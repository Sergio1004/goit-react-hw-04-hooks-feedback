{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","App.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","countainer","Object","keys","map","option","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","reduce","acc","value","percent","Math","round","countPositiveFeedbackPercentage","type","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,WAAa,sC,iBCAxED,EAAOC,QAAU,CAAC,WAAa,0B,qJCgBhBC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,gBCiBQI,MArBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKL,UAAWC,IAAEK,WAAlB,SACGC,OAAOC,KAAKJ,GAASK,KAAI,SAAAC,GAAM,OAC9B,wBAEEV,UAAWC,IAAEU,OACbC,QAAS,kBAAMP,EAAgBK,IAHjC,SAKGA,GAJIA,SCcAG,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WCCSC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCkEEC,MA9DR,WACL,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAqBMC,EAAqB,WACzB,MAAO,CAACZ,EAAMC,EAASC,GAAKW,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,MAQrDC,EALkC,WACtC,IAAMb,EAAQS,IACd,OAAOT,EAAQ,EAAIc,KAAKC,MAAOlB,EAAOG,EAAS,KAAO,EAGxCgB,GACVhB,EAAQS,IAEd,OACE,sBAAK1B,UAAWC,IAAEK,WAAlB,UACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAAS,CAAEU,OAAMC,UAASC,OAC1BX,gBApCe,SAAA6B,GACrB,OAAQA,GACN,IAAK,OACHX,GAAQ,SAAAY,GAAI,OAAIA,EAAO,KACvB,MAEF,IAAK,UACHX,GAAW,SAAAW,GAAI,OAAIA,EAAO,KAC1B,MAEF,IAAK,MACHV,GAAO,SAAAU,GAAI,OAAIA,EAAO,KACtB,MAEF,QACE,aAyBF,cAAC,EAAD,CAASrC,MAAM,aAAf,SACGmB,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBY,IAGtB,cAAC,EAAD,CAAcV,QAAQ,4BCzDhCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fbb4b4c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__18ufs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__t-318\",\"countainer\":\"FeedbackOptions_countainer__1-dbx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countainer\":\"App_countainer__2yx_p\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={s.countainer}>\r\n      {Object.keys(options).map(option => (\r\n        <button\r\n          key={option}\r\n          className={s.button}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <ul>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {total}</li>\r\n      <li>Positive feedback: {positivePercentage}%</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import { useState } from 'react';\nimport s from './App.module.css';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleFeedback = type => {\n    switch (type) {\n      case 'good':\n        setGood(prev => prev + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prev => prev + 1);\n        break;\n\n      case 'bad':\n        setBad(prev => prev + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return [good, neutral, bad].reduce((acc, value) => acc + value);\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return total > 0 ? Math.round((good / total) * 100) : 0;\n  };\n\n  const percent = countPositiveFeedbackPercentage();\n  const total = countTotalFeedback();\n\n  return (\n    <div className={s.countainer}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={{ good, neutral, bad }}\n          onLeaveFeedback={handleFeedback}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {total > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={percent}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}